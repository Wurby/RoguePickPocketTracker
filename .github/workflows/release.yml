name: Package and Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  package:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for git history
        
    - name: Create Release Package
      id: package
      run: |
        # Get version from tag or use commit hash
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION=$(git rev-parse --short HEAD)
        fi
        
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
        # Create package directory
        PACKAGE_NAME="RoguePickPocketTracker-$VERSION"
        mkdir -p "$PACKAGE_NAME"
        
        # Copy addon files (exclude git and github files)
        cp *.lua *.toc "$PACKAGE_NAME/"
        
        # Replace version token in TOC file
        sed -i "s/@project-version@/$VERSION/g" "$PACKAGE_NAME/RoguePickPocketTracker.toc"
        
        # Create zip file
        zip -r "$PACKAGE_NAME.zip" "$PACKAGE_NAME/"
        
        echo "PACKAGE_FILE=$PACKAGE_NAME.zip" >> $GITHUB_OUTPUT
        echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_OUTPUT
        
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.package.outputs.VERSION }}
        release_name: Release ${{ steps.package.outputs.VERSION }}
        draft: false
        prerelease: ${{ contains(steps.package.outputs.VERSION, 'alpha') || contains(steps.package.outputs.VERSION, 'beta') }}
        
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.package.outputs.PACKAGE_FILE }}
        asset_name: ${{ steps.package.outputs.PACKAGE_FILE }}
        asset_content_type: application/zip
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.package.outputs.PACKAGE_NAME }}
        path: ${{ steps.package.outputs.PACKAGE_FILE }}
